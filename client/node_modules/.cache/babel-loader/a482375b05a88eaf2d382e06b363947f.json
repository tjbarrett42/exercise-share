{"ast":null,"code":"var _jsxFileName = \"/home/timbarrett/Webdev/exercise-share/client/src/components/PostDetails/CommentSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}: ${comment}`, post._id));\n    setComment('');\n    setComments(newComments);\n    commentsRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  console.log('commentsection loaded');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commentsOuterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.commentsInnerContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"subtitle1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: c.split(': ')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), c.split(':')[1]]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: commentsRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Write a comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Comment\",\n          multiline: true,\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: '10px'\n          },\n          fullWidth: true,\n          disabled: !comment.length,\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: handleComment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CommentSection, \"BpxSdSokqHhqJHGTkjkVcsrg5ns=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["/home/timbarrett/Webdev/exercise-share/client/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","commentPost","useStyles","CommentSection","post","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","comments","setComments","classes","commentsRef","handleComment","newComments","result","name","_id","current","scrollIntoView","behavior","console","log","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\n\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst CommentSection = ({ post }) => {\n    const user = JSON.parse(localStorage.getItem('profile'));\n    const [comment, setComment] = useState('');\n    const dispatch = useDispatch();\n    const [comments, setComments] = useState(post?.comments);\n    const classes = useStyles();\n    const commentsRef = useRef();\n  \n    const handleComment = async () => {\n      const newComments = await dispatch(commentPost(`${user?.result?.name}: ${comment}`, post._id));\n  \n      setComment('');\n      setComments(newComments);\n  \n      commentsRef.current.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    console.log('commentsection loaded');\n  \n    return (\n      <div>\n        <div className={classes.commentsOuterContainer}>\n          <div className={classes.commentsInnerContainer}>\n            <Typography gutterBottom variant=\"h6\">Comments</Typography>\n            {comments?.map((c, i) => (\n              <Typography key={i} gutterBottom variant=\"subtitle1\">\n                <strong>{c.split(': ')[0]}</strong>\n                {c.split(':')[1]}\n              </Typography>\n            ))}\n            <div ref={commentsRef} />\n          </div>\n          <div style={{ width: '70%' }}>\n            <Typography gutterBottom variant=\"h6\">Write a comment</Typography>\n            <TextField fullWidth rows={4} variant=\"outlined\" label=\"Comment\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n            <br />\n            <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"primary\" variant=\"contained\" onClick={handleComment}>\n              Comment\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default CommentSection;"]},"metadata":{},"sourceType":"module"}
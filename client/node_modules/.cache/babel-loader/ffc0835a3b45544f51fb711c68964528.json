{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/timbarrett/Webdev/exercise-share/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","FETCH_POST","post","map","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,EAAkDC,eAAlD,EAAmEC,aAAnE,EAAkFC,WAAlF,QAAqG,0BAArG;AAEA,gBAAe,YAAmD;AAAA,MAAlDC,KAAkD,uEAA1C;AAAEC,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAA0C;AAAA,MAAXC,MAAW;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKF,WAAL;AACE,aAAO,EAAE,GAAGC,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKT,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFjB;AAGLC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJzB,OAAP;;AAMF,SAAKX,eAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAA1B,OAAP;;AACF,SAAKI,UAAL;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYU,QAAAA,IAAI,EAAEP,MAAM,CAACE;AAAzB,OAAP;;AACF,SAAKT,IAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYS,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaT,MAAM,CAACE,OAAP,CAAeO,GAA5B,GAAkCT,MAAM,CAACE,OAAzC,GAAmDK,IAA9E;AAAnB,OAAP;;AACF,SAAKjB,MAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAnB,OAAP;;AACF,SAAKX,MAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYS,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaT,MAAM,CAACE,OAAP,CAAeO,GAA5B,GAAkCT,MAAM,CAACE,OAAzC,GAAmDK,IAA9E;AAAnB,OAAP;;AACF,SAAKf,MAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYW,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaT,MAAM,CAACE,OAAjD;AAAnB,OAAP;;AACF;AACE,aAAOL,KAAP;AAzBJ;AA2BD,CA5BD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\n\nexport default (state = { isLoading: true, posts: []}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true};\n    case END_LOADING:\n      return { ...state, isLoading: false};\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      }\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload};\n    case FETCH_POST:\n      return { ...state, post: action.payload};\n    case LIKE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload]};\n    case UPDATE:\n      return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post))};\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload)};\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}